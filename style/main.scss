@import "_helpers";
@import "fonts/roboto.css";
@import "_glory";

$field-width: 500px;
$grid-spacing: 15px;
$grid-row-cells: 5;
$tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
$tile-border-radius: 3px;

$mobile-threshold: $field-width + 20px;
$super-small-phones: 354px;

$text-color: #776e65;
$bright-text-color: #f9f6f2;

$tile-color: #eee4da;
$tile-gold-color: #edc22e;
$tile-gold-glow-color: lighten($tile-gold-color, 15%);

$game-container-background: #bbada0;

$transition-speed: 200ms;

@import "_progress-bar.scss";

html,
body {
  scroll-behavior: smooth;
  margin: 0;
  padding: 0;

  background: #faf8ef;
  color: $text-color;
  font-family: "Roboto", Arial, sans-serif;
  font-size: 18px;
}

body {
  margin: 20px 0;
}

.heading:after {
  content: "";
  display: block;
  clear: both;
}

h1.title {
  width: 100%;
  font-size: 70px;
  font-weight: bold;
  margin: 0;
  display: block;
  float: left;
  margin-bottom: 0.5rem;
}

.sin-slavy-box {
  width: 100%;
  text-align: center;
  margin-top: 2rem;
  margin-bottom: 2.5rem;

  a {
    text-transform: uppercase;
    text-decoration: none;
    background: darken($game-container-background, 20%);
    color: white;
    border-radius: 3px;
    padding: 0.7rem 1rem;
  }
}

.hidden {
  display: none !important;
}

.welcome-info {
  display: flex;
  flex-direction: row-reverse;
  align-items: flex-start;
  font-size: 1.3rem;
  line-height: 1.9rem;
  margin: 1rem;
  text-align: left;

  .progress-text-close-welcome {
    cursor: pointer;
    width: 2rem;
  }

  @include smaller($mobile-threshold) {
    font-size: 1.2rem;
    line-height: 1.7rem;
    .progress-text-close-welcome {
      width: 1.8rem;
    }
  }

  @include smaller($super-small-phones) {
    line-height: 1.4rem;
    font-size: 0.9rem;
    .progress-text-close-welcome {
      width: 1.4rem;
    }
  }
}

@include keyframes("move-up") {
  0% {
    top: 25px;
    opacity: 1;
  }

  100% {
    top: -50px;
    opacity: 0;
  }
}

.new-station-title {
  font-weight: 600;
  // text-align: center;
  margin: 0;
  @include animation(pop 200ms ease $transition-speed);
  @include animation-fill-mode(backwards);
}

.scores-container {
  float: right;
  text-align: right;
  width: 100%;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}

// Styles for buttons
@mixin button {
  display: inline-block;
  background: darken($game-container-background, 20%);
  border-radius: 3px;
  padding: 0 20px;
  text-decoration: none;
  color: $bright-text-color;
  height: 40px;
  line-height: 42px;
}

.restart-button {
  @include button;
  display: block;
  text-align: center;
  float: right;
  @include smaller($mobile-threshold) {
    font-size: 1rem;
  }

  @include smaller($super-small-phones) {
    font-size: 0.8rem;
  }
}

.score-container,
.best-container {
  $height: 25px;

  position: relative;
  display: inline-block;
  background: $game-container-background;
  padding: 15px 25px;
  font-size: $height;
  height: $height;
  line-height: $height + 22px;
  font-weight: bold;
  border-radius: 3px;
  color: white;
  margin-top: 8px;
  text-align: center;

  @include smaller($mobile-threshold) {
    font-size: 1.5rem;
  }

  @include smaller($super-small-phones) {
    font-size: 1rem;
  }

  &:after {
    position: absolute;
    width: 100%;
    top: 10px;
    left: 0;
    text-transform: uppercase;
    font-size: 13px;
    line-height: 13px;
    text-align: center;
    color: $tile-color;
  }

  .score-addition {
    position: absolute;
    right: 30px;
    color: red;
    font-size: $height;
    line-height: $height;
    font-weight: bold;
    color: rgba($text-color, 0.9);
    z-index: 100;
    @include animation("move-up" 600ms ease-in);
    @include animation-fill-mode(both);
  }
}

.score-container:after {
  content: "Score";
}

.best-container:after {
  content: "Best";
}

p {
  margin-top: 0;
  margin-bottom: 10px;
  line-height: 1.65;
}

a {
  color: $text-color;
  font-weight: bold;
  text-decoration: underline;
  cursor: pointer;
}

strong {
  &.important {
    text-transform: uppercase;
  }
}

hr {
  border: none;
  border-bottom: 1px solid lighten($text-color, 40%);
  margin-top: 20px;
  margin-bottom: 30px;
  @include smaller($mobile-threshold) {
    margin: 0;
  }

  @include smaller($super-small-phones) {
    margin: 0;
  }
}

.container {
  width: $field-width;
  margin: 0 auto;
}

@include keyframes(fade-in) {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

// Styles for buttons
@mixin button {
  display: inline-block;
  background: darken($game-container-background, 20%);
  border-radius: 3px;
  padding: 0 20px;
  text-decoration: none;
  color: $bright-text-color;
  height: 40px;
  line-height: 42px;
}

// Game field mixin used to render CSS at different width
.game-container {
  margin-top: 20px;
  position: relative;
  padding: $grid-spacing;

  cursor: default;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;

  background: $game-container-background;
  border-radius: $tile-border-radius * 2;
  width: $field-width;
  height: $field-width;
  -ms-touch-action: none;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;

  .game-message {
    display: none;

    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: rgba($tile-color, 0.8);
    z-index: 100;

    text-align: center;

    p {
      font-size: 2rem;
      font-weight: bold;
      height: 60px;
      line-height: 60px;
      margin-top: 222px;
      // height: $field-width;
      // line-height: $field-width;
    }

    .lower {
      display: block;
      margin-top: 59px;
    }

    a {
      @include button;
      margin-left: 9px;
      // margin-top: 59px;

      &.keep-playing-button {
        display: none;
      }
    }

    @include animation(fade-in 800ms ease $transition-speed * 12);
    @include animation-fill-mode(both);

    &.game-won {
      background: rgba($tile-gold-color, 0.5);
      color: $bright-text-color;

      a.keep-playing-button {
        display: inline-block;
      }
    }

    &.game-won,
    &.game-over {
      display: block;
    }
    .new-station {
      display: none;
    }
    &.game-info {
      display: block;
      @include animation(fade-in 1ms ease $transition-speed * 12);
      .retry-button {
        display: none;
      }
      .new-station {
        display: block;
      }
    }
  }
}

.grid-container {
  position: absolute;
  z-index: 1;
}

.grid-row {
  margin-bottom: $grid-spacing;

  &:last-child {
    margin-bottom: 0;
  }

  &:after {
    content: "";
    display: block;
    clear: both;
  }
}

.grid-cell {
  width: $tile-size;
  height: $tile-size;
  margin-right: $grid-spacing;
  float: left;

  border-radius: $tile-border-radius;

  background: rgba($tile-color, 0.35);

  &:last-child {
    margin-right: 0;
  }
}

.tile-container {
  position: absolute;
  z-index: 2;
}

.tile {
  &,
  .tile-inner {
    width: ceil($tile-size);
    height: ceil($tile-size);
    line-height: $tile-size + 10px;
  }

  // Build position classes
  @for $x from 1 through $grid-row-cells {
    @for $y from 1 through $grid-row-cells {
      &.tile-position-#{$x}-#{$y} {
        $xPos: floor(($tile-size + $grid-spacing) * ($x - 1));
        $yPos: floor(($tile-size + $grid-spacing) * ($y - 1));
        @include transform(translate($xPos, $yPos));
      }
    }
  }
}

.tile {
  position: absolute; // Makes transforms relative to the top-left corner

  .tile-inner {
    border-radius: $tile-border-radius;

    background: $tile-color;
    text-align: center;
    font-weight: bold;
    z-index: 10;

    font-size: 2rem;
  }

  // Movement transition
  @include transition($transition-speed ease-in-out);
  -webkit-transition-property: -webkit-transform;
  -moz-transition-property: -moz-transform;
  transition-property: transform;

  $base: 2;
  $exponent: 1;
  $limit: 18;

  // Colors for all 11 states, false = no special color
  $special-colors:
    #ede3d9 true,
    #eed3bb true,
    #f2b086 true,
    #f76345 true,
    // orange
    #ff803e true,
    #ff9c3a true,
    #ffb83c true,
    #ffd447 true,
    // yellow
    #d7e138 true,
    #a2ed43 true,
    #45f763 true,
    // green
    #00f2bd true,
    #00e6f4 true,
    #47d3ff true,
    #00c3ff true,
    #3ca9ff true,
    #ac7eff true,
    #fd12f5 true;

  // Build tile colors
  @while $exponent <= $limit {
    $power: pow($base, $exponent);

    &.tile-#{$power} .tile-inner {
      // Calculate base background color
      $gold-percent: ($exponent - 1) / ($limit - 1) * 100;
      $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

      $nth-color: nth($special-colors, $exponent);

      $special-background: nth($nth-color, 1);
      $bright-color: nth($nth-color, 2);

      @if $special-background {
        $mixed-background: mix($special-background, $mixed-background, 55%);
      }

      @if $bright-color {
        color: $bright-text-color;
      }

      // Set background
      background: $mixed-background;

      // Add glow
      $glow-opacity: max($exponent - 4, 0) / ($limit - 4);

      @if not $special-background {
        box-shadow:
          0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
          inset 0 0 0 1px rgba(white, $glow-opacity / 3);
      }

      // Adjust font size for bigger numbers
      @if $power >= 100 and $power < 1000 {
        font-size: 1.5rem;

        // Media queries placed here to avoid carrying over the rest of the logic
        @include smaller($mobile-threshold) {
          font-size: 1.5rem;
        }
        @include smaller($super-small-phones) {
          font-size: 1.2rem;
        }
      } @else if $power >= 1000 {
        font-size: 1.2rem;

        @include smaller($mobile-threshold) {
          font-size: 1.2rem;
        }
        @include smaller($super-small-phones) {
          font-size: 0.75rem;
        }
      }
    }

    $exponent: $exponent + 1;
  }

  // Super tiles (above 2048)
  &.tile-super .tile-inner {
    color: $bright-text-color;
    background: mix(#333, $tile-gold-color, 95%);

    font-size: 30px;

    @include smaller($mobile-threshold) {
      font-size: 10px;
    }
  }
}

@include keyframes(appear) {
  0% {
    opacity: 0;
    @include transform(scale(0));
  }

  100% {
    opacity: 1;
    @include transform(scale(1));
  }
}

.tile-new .tile-inner {
  @include animation(appear 200ms ease $transition-speed);
  @include animation-fill-mode(backwards);
}

@include keyframes(pop) {
  0% {
    @include transform(scale(0));
  }

  50% {
    @include transform(scale(1.2));
  }

  100% {
    @include transform(scale(1));
  }
}

.tile-merged .tile-inner {
  z-index: 20;
  @include animation(pop 200ms ease $transition-speed);
  @include animation-fill-mode(backwards);
}
.above-game {
  // width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.game-intro {
  margin-bottom: 0;
}

.game-explanation {
  margin-top: 20px;
}

// Normal phones
@include smaller($mobile-threshold) {
  // Redefine variables for smaller screens
  $field-width: 330px;
  $grid-spacing: 10px;
  $grid-row-cells: 5;
  $tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
  $tile-border-radius: 3px;

  html,
  body {
    font-size: 15px;
  }

  .container {
    width: 90vw;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  h1.title {
    font-size: 27px;
    margin-top: 15px;
  }

  .score-container,
  .best-container {
    margin-top: 0;
    padding: 15px 10px;
    min-width: 40px;
  }

  .heading {
    width: 100%;
    margin-bottom: 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  // Render the game field at the right width
  // Game field mixin used to render CSS at different width
  .game-container {
    margin-top: 20px;
    position: relative;
    padding: $grid-spacing;

    cursor: default;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;

    background: $game-container-background;
    border-radius: $tile-border-radius * 2;
    width: $field-width;
    height: $field-width;
    -ms-touch-action: none;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;

    .game-message {
      display: none;

      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: rgba($tile-color, 0.8);
      z-index: 100;

      text-align: center;

      p {
        font-size: 60px;
        font-weight: bold;
        height: 60px;
        line-height: 60px;
        margin-top: 222px;
        // height: $field-width;
        // line-height: $field-width;
      }

      .lower {
        display: block;
        margin-top: 59px;
      }

      a {
        @include button;
        margin-left: 9px;
        // margin-top: 59px;

        &.keep-playing-button {
          display: none;
        }
      }

      @include animation(fade-in 800ms ease $transition-speed * 12);
      @include animation-fill-mode(both);

      &.game-won {
        background: rgba($tile-gold-color, 0.5);
        color: $bright-text-color;

        a.keep-playing-button {
          display: inline-block;
        }
      }

      &.game-won,
      &.game-over {
        display: block;
      }
      .new-station {
        display: none;
      }
      &.game-info {
        display: block;
        @include animation(fade-in 1ms ease $transition-speed * 12);
        .retry-button {
          display: none;
        }
        .new-station {
          display: block;
        }
      }
    }
  }

  .grid-container {
    position: absolute;
    z-index: 1;
  }

  .grid-row {
    margin-bottom: $grid-spacing;

    &:last-child {
      margin-bottom: 0;
    }

    &:after {
      content: "";
      display: block;
      clear: both;
    }
  }

  .grid-cell {
    width: $tile-size;
    height: $tile-size;
    margin-right: $grid-spacing;
    float: left;

    border-radius: $tile-border-radius;

    background: rgba($tile-color, 0.35);

    &:last-child {
      margin-right: 0;
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;
  }

  .tile {
    &,
    .tile-inner {
      width: ceil($tile-size);
      height: ceil($tile-size);
      line-height: $tile-size + 10px;
    }

    // Build position classes
    @for $x from 1 through $grid-row-cells {
      @for $y from 1 through $grid-row-cells {
        &.tile-position-#{$x}-#{$y} {
          $xPos: floor(($tile-size + $grid-spacing) * ($x - 1));
          $yPos: floor(($tile-size + $grid-spacing) * ($y - 1));
          @include transform(translate($xPos, $yPos));
        }
      }
    }
  }

  .game-container {
    margin-top: 20px;
  }

  // Rest of the font-size adjustments in the tile class
  .tile .tile-inner {
    font-size: 1.8rem;
  }

  .game-message {
    p {
      font-size: 1.5rem !important;
      height: 30px !important;
      line-height: 30px !important;
      margin-top: 90px !important;
    }

    .lower {
      margin-top: 30px !important;
    }
  }
}

// Super small phones
@include smaller($super-small-phones) {
  // Redefine variables for smaller screens
  $field-width: 250px;
  $grid-spacing: 7px;
  $grid-row-cells: 5;
  $tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
  $tile-border-radius: 3px;

  html,
  body {
    font-size: 15px;
  }

  .container {
    width: 90vw;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  h1.title {
    font-size: 27px;
    margin-top: 15px;
  }

  .score-container,
  .best-container {
    margin-top: 0;
    padding: 15px 10px;
    min-width: 40px;
  }

  .heading {
    margin-bottom: 10px;
  }

  // Render the game field at the right width
  // Game field mixin used to render CSS at different width
  .game-container {
    margin-top: 20px;
    position: relative;
    padding: $grid-spacing;

    cursor: default;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;

    background: $game-container-background;
    border-radius: $tile-border-radius * 2;
    width: $field-width;
    height: $field-width;
    -ms-touch-action: none;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;

    .game-message {
      display: none;

      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: rgba($tile-color, 0.8);
      z-index: 100;

      text-align: center;

      p {
        font-size: 60px;
        font-weight: bold;
        height: 60px;
        line-height: 60px;
        margin-top: 222px;
        // height: $field-width;
        // line-height: $field-width;
      }

      .lower {
        display: block;
        margin-top: 59px;
      }

      a {
        @include button;
        margin-left: 9px;
        // margin-top: 59px;

        &.keep-playing-button {
          display: none;
        }
      }

      @include animation(fade-in 800ms ease $transition-speed * 12);
      @include animation-fill-mode(both);

      &.game-won {
        background: rgba($tile-gold-color, 0.5);
        color: $bright-text-color;

        a.keep-playing-button {
          display: inline-block;
        }
      }

      &.game-won,
      &.game-over {
        display: block;
      }
      .new-station {
        display: none;
      }
      &.game-info {
        display: block;
        @include animation(fade-in 1ms ease $transition-speed * 12);
        .retry-button {
          display: none;
        }
        .new-station {
          display: block;
        }
      }
    }
  }

  .grid-container {
    position: absolute;
    z-index: 1;
  }

  .grid-row {
    margin-bottom: $grid-spacing;

    &:last-child {
      margin-bottom: 0;
    }

    &:after {
      content: "";
      display: block;
      clear: both;
    }
  }

  .grid-cell {
    width: $tile-size;
    height: $tile-size;
    margin-right: $grid-spacing;
    float: left;

    border-radius: $tile-border-radius;

    background: rgba($tile-color, 0.35);

    &:last-child {
      margin-right: 0;
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;
  }

  .tile {
    &,
    .tile-inner {
      width: ceil($tile-size);
      height: ceil($tile-size);
      line-height: $tile-size + 10px;
    }

    // Build position classes
    @for $x from 1 through $grid-row-cells {
      @for $y from 1 through $grid-row-cells {
        &.tile-position-#{$x}-#{$y} {
          $xPos: floor(($tile-size + $grid-spacing) * ($x - 1));
          $yPos: floor(($tile-size + $grid-spacing) * ($y - 1));
          @include transform(translate($xPos, $yPos));
        }
      }
    }
  }

  .game-container {
    margin-top: 20px;
  }

  // Rest of the font-size adjustments in the tile class
  .tile .tile-inner {
    font-size: 1.3rem;
  }

  .game-message {
    p {
      font-size: 1rem !important;
      height: 30px !important;
      line-height: 30px !important;
      margin-top: 90px !important;
    }

    .lower {
      margin-top: 30px !important;
    }
  }
}

@import "_icons";
